# Hello my-mysql-deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mysql-deployment
  labels:
    app: my-mysql-deployment
spec:
  # A single mysql instance
  replicas: 1
  selector:
    matchLabels:
      app: my-mysql
  template:
    metadata:
      labels:
        app: my-mysql
    spec:
      # Use the init container to download data to the location where the mysql container expects it
      initContainers:
        - name: init-container-data-downloader
          image: curlimages/curl
          args:
            - "-o"
            - "/tmp/data/init.sql" # we are saving downloaded file as init.sql in /tmp/data directory
            - "https://raw.githubusercontent.com/Thuridus/Big-Data/develop/my-database/my-database.sql"
          volumeMounts:
            - name: data-volume
              mountPath: /tmp/data
      # The actual mysql database
      containers:
        - name: my-mysql
          image: mysql
          # Set required environment variables to initialize the container
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "mysecretpw"
            - name: MYSQL_DATABASE
              value: "mysqldb"
          # Mount the volume that has been populated by the init container
          volumeMounts:
            - name: data-volume
              mountPath: /docker-entrypoint-initdb.d/
            - name: mysql-config-volume
              mountPath: /etc/mysql/conf.d/default_auth.cnf ## path to mount file
              subPath: default_auth ## name of config
          ports:
            - containerPort: 3306 #interner Pod
            - containerPort: 33060 # externer Pod
          livenessProbe:
            tcpSocket:
              port: 33060
            initialDelaySeconds: 300 # to avoid restarts while initializing the database
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 33060
            initialDelaySeconds: 5
            periodSeconds: 10
      # Define an empty volume to be shared by the init and mysql container
      volumes:
        - name: data-volume
          emptyDir: {}
          # Config volume is needed to enable access via Python
        - name: mysql-config-volume
          configMap:
            name: mysql-config

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-mysql-service
spec:
  type: NodePort
  selector:
    app: my-mysql
  ports:
    - name: mysql-prot
      protocol: TCP
      port: 3306
      targetPort: 3306
    - name: mysql-xproto
      protocol: TCP
      port: 33060
      targetPort: 33060

      